@model API.Locadora.Models.Locacao

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Locacao</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="CpfCliente" class="control-label"></label>
                <input asp-for="CpfCliente" class="form-control" />
                <span asp-validation-for="CpfCliente" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="DataLocacao" class="control-label"></label>
                <input asp-for="DataLocacao" class="form-control" />
                <span asp-validation-for="DataLocacao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Filmes" class="control-label">Filmes</label>
                <select asp-for="Filmes" class="form-control" asp-items="ViewBag.Filmes" multiple required>
                </select>
                <span asp-validation-for="Filmes" class="text-danger"></span>
            </div>
            <input hidden type="text" name="films" id="films" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>

        $("#Filmes").change(function () {
            var selectedItems = [];
            $("#Filmes option:selected").each(function () {
                selectedItems.push($(this).attr("value"));
            });
            $("#films").val(selectedItems.join(', '));
        });

</script>
}
